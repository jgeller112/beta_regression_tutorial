name: Render paper with Nix and Quarto

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Check if manuscript changed
        id: check_changes
        run: |
          if git rev-list --count HEAD >/dev/null 2>&1 && [ "$(git rev-list --count HEAD)" -gt 1 ]; then
            if git diff --name-only HEAD^ HEAD | grep -q "^manuscript/ms.qmd$"; then
              echo "changed=true" >> $GITHUB_ENV
            else
              echo "changed=false" >> $GITHUB_ENV
            fi
          else
            echo "changed=true" >> $GITHUB_ENV
          fi

      - name: Install Nix
        if: env.changed == 'true'
        uses: DeterminateSystems/nix-installer-action@main
        with:
          logger: pretty
          log-directives: nix_installer=trace
          backtrace: full

      - name: Use rstats-on-nix cache
        if: env.changed == 'true'
        uses: cachix/cachix-action@v15
        with:
          name: rstats-on-nix

      - name: Generate default.nix
        if: env.changed == 'true'
        run: nix-shell -p R rPackages.rix --run "R -e 'source(\"create_env_dev.R\")'"

      - name: Install MS fonts
        if: env.changed == 'true'
        run: |
          echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | sudo debconf-set-selections
          sudo apt-get install -y --no-install-recommends fontconfig ttf-mscorefonts-installer
          fc-cache -fv

      - name: Build development environment
        if: env.changed == 'true'
        run: nix-build

      - name: Quarto render manuscript
        if: env.changed == 'true'
        run: |
          nix-shell --run "quarto render manuscript/ms.qmd --output-dir rendered"

      - name: Checkout 'rendered' branch separately
        if: env.changed == 'true'
        uses: actions/checkout@v4
        with:
          ref: rendered
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          path: rendered-branch

      - name: Commit and push to 'rendered' branch
        if: env.changed == 'true'
        working-directory: rendered-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin main
          git merge origin/main --no-edit || git rebase origin/main

          # Copy new manuscript output into the subfolder
          rm -rf manuscript/*
          cp -r ../rendered/* manuscript/

          git add manuscript/
          git commit -m "Rendered manuscript output [ci skip]" || echo "No changes to commit"
          git push origin rendered
